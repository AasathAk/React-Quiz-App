{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Projects\\\\reactquiz\\\\src\\\\components\\\\EndQuiz.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EndQuiz({\n  points,\n  totalQuestions,\n  highScore,\n  onRestart\n}) {\n  // Calculate percentage score\n  const percentage = points / (totalQuestions * 5) * 100; // assuming each question is worth 5 points\n\n  // Set emoji based on percentage score\n  let emoji = '👍'; // Default emoji\n  if (percentage > 80) {\n    emoji = '🎉'; // Excellent score\n  } else if (percentage > 50) {\n    emoji = '😊'; // Good score\n  } else if (percentage > 30) {\n    emoji = '🙂'; // Average score\n  } else {\n    emoji = '😕'; // Low score\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"completion\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Thank you for completing the Quiz!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"emoji\",\n      children: [emoji, \" - You did well\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"result\",\n      children: [\"You scored \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: points\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 22\n      }, this), \" out of \", totalQuestions * 5, \", and your percentage is \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [percentage.toFixed(2), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 100\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"highscore\",\n      children: [\"(HighScore: \", highScore, \" points)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"restart\",\n      onClick: onRestart,\n      children: \"Restart quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }, this);\n}\n_c = EndQuiz;\nvar _c;\n$RefreshReg$(_c, \"EndQuiz\");","map":{"version":3,"names":["EndQuiz","points","totalQuestions","highScore","onRestart","percentage","emoji","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","onClick","_c","$RefreshReg$"],"sources":["D:/React Projects/reactquiz/src/components/EndQuiz.js"],"sourcesContent":["export default function EndQuiz({ points, totalQuestions, highScore, onRestart }) {\r\n    // Calculate percentage score\r\n    const percentage = (points / (totalQuestions * 5)) * 100; // assuming each question is worth 5 points\r\n  \r\n    // Set emoji based on percentage score\r\n    let emoji = '👍'; // Default emoji\r\n    if (percentage > 80) {\r\n      emoji = '🎉'; // Excellent score\r\n    } else if (percentage > 50) {\r\n      emoji = '😊'; // Good score\r\n    } else if (percentage > 30) {\r\n      emoji = '🙂'; // Average score\r\n    } else {\r\n      emoji = '😕'; // Low score\r\n    }\r\n  \r\n    return (\r\n      <section className=\"completion\">\r\n        <h2>Thank you for completing the Quiz!</h2>\r\n        <span className=\"emoji\">{emoji} - You did well</span>\r\n        <p className=\"result\">\r\n          You scored <strong>{points}</strong> out of {totalQuestions * 5}, and your percentage is <strong>{percentage.toFixed(2)}%</strong>\r\n        </p>\r\n        <p className=\"highscore\">(HighScore: {highScore} points)</p>\r\n        <button className=\"restart\" onClick={onRestart}>Restart quiz</button>\r\n      </section>\r\n    );\r\n  }\r\n  "],"mappings":";;AAAA,eAAe,SAASA,OAAOA,CAAC;EAAEC,MAAM;EAAEC,cAAc;EAAEC,SAAS;EAAEC;AAAU,CAAC,EAAE;EAC9E;EACA,MAAMC,UAAU,GAAIJ,MAAM,IAAIC,cAAc,GAAG,CAAC,CAAC,GAAI,GAAG,CAAC,CAAC;;EAE1D;EACA,IAAII,KAAK,GAAG,IAAI,CAAC,CAAC;EAClB,IAAID,UAAU,GAAG,EAAE,EAAE;IACnBC,KAAK,GAAG,IAAI,CAAC,CAAC;EAChB,CAAC,MAAM,IAAID,UAAU,GAAG,EAAE,EAAE;IAC1BC,KAAK,GAAG,IAAI,CAAC,CAAC;EAChB,CAAC,MAAM,IAAID,UAAU,GAAG,EAAE,EAAE;IAC1BC,KAAK,GAAG,IAAI,CAAC,CAAC;EAChB,CAAC,MAAM;IACLA,KAAK,GAAG,IAAI,CAAC,CAAC;EAChB;EAEA,oBACEC,OAAA;IAASC,SAAS,EAAC,YAAY;IAAAC,QAAA,gBAC7BF,OAAA;MAAAE,QAAA,EAAI;IAAkC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3CN,OAAA;MAAMC,SAAS,EAAC,OAAO;MAAAC,QAAA,GAAEH,KAAK,EAAC,iBAAe;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACrDN,OAAA;MAAGC,SAAS,EAAC,QAAQ;MAAAC,QAAA,GAAC,aACT,eAAAF,OAAA;QAAAE,QAAA,EAASR;MAAM;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,YAAQ,EAACX,cAAc,GAAG,CAAC,EAAC,2BAAyB,eAAAK,OAAA;QAAAE,QAAA,GAASJ,UAAU,CAACS,OAAO,CAAC,CAAC,CAAC,EAAC,GAAC;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjI,CAAC,eACJN,OAAA;MAAGC,SAAS,EAAC,WAAW;MAAAC,QAAA,GAAC,cAAY,EAACN,SAAS,EAAC,UAAQ;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC5DN,OAAA;MAAQC,SAAS,EAAC,SAAS;MAACO,OAAO,EAAEX,SAAU;MAAAK,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D,CAAC;AAEd;AAACG,EAAA,GA3BqBhB,OAAO;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}