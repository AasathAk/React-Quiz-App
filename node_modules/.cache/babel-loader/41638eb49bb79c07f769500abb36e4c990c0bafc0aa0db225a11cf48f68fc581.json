{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Projects\\\\reactquiz\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useEffect, useReducer } from \"react\";\nimport Header from './components/Header';\nimport Loading from './components/Loading';\nimport Error from './components/Error';\nimport QuizMain from './components/QuizMain';\nimport EndQuiz from './components/EndQuiz';\nimport Question from './components/Question';\nimport NextButton from './components/NextButton';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  quizQuestion: [],\n  status: 'loading',\n  error: null,\n  index: 0,\n  // track the current question\n  selectedAnswer: null,\n  // to track the selected answer\n  points: 0,\n  // track the score\n  showNext: false // controls when to show the Next button\n};\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'fetch_success':\n      return {\n        ...state,\n        quizQuestion: action.payload,\n        status: 'ready'\n      };\n    case 'fetch_error':\n      return {\n        ...state,\n        status: 'error',\n        error: action.payload\n      };\n    case 'start_quiz':\n      return {\n        ...state,\n        status: 'active'\n      };\n    case 'next_question':\n      return {\n        ...state,\n        index: state.index + 1,\n        selectedAnswer: null,\n        // reset selected answer for next question\n        showNext: false // hide the Next button for the next question\n      };\n    case 'select_answer':\n      const isCorrect = action.payload === state.quizQuestion[state.index].correctAnswer;\n      return {\n        ...state,\n        selectedAnswer: action.payload,\n        points: isCorrect ? state.points + state.quizQuestion[state.index].points : state.points,\n        showNext: true // display the Next button after selecting an answer\n      };\n    case 'finish_quiz':\n      return {\n        ...state,\n        status: 'finished'\n      };\n    default:\n      return state;\n  }\n}\nexport default function App() {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const {\n    quizQuestion,\n    status,\n    index\n  } = state;\n  const TotalQuestion = quizQuestion.length;\n  useEffect(() => {\n    fetch('http://localhost:8000/quizQuestion').then(res => res.json()).then(data => {\n      dispatch({\n        type: 'fetch_success',\n        payload: data\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'fetch_error',\n        payload: err.message\n      });\n    });\n  }, []);\n\n  // Function to handle starting the quiz\n  const handleStartQuiz = () => {\n    dispatch({\n      type: 'start_quiz'\n    }); // Dispatch action to start quiz\n  };\n\n  // Function to go to the next question\n  const handleNextQuestion = () => {\n    if (index < TotalQuestion - 1) {\n      dispatch({\n        type: 'next_question'\n      });\n    } else {\n      dispatch({\n        type: 'finish_quiz'\n      });\n    }\n  };\n\n  // Render based on different states\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [status === 'loading' && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 32\n    }, this), status === 'error' && /*#__PURE__*/_jsxDEV(Error, {\n      message: state.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 30\n    }, this), status === 'ready' && /*#__PURE__*/_jsxDEV(Header, {\n      TotalQuestion: TotalQuestion,\n      onStartQuiz: handleStartQuiz\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 30\n    }, this), status === 'active' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(QuizMain, {\n        quizQuestion: state.quizQuestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Question, {\n        question: quizQuestion[index]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NextButton, {\n        onNext: handleNextQuestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), status === 'finished' && /*#__PURE__*/_jsxDEV(EndQuiz, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useReducer","Header","Loading","Error","QuizMain","EndQuiz","Question","NextButton","jsxDEV","_jsxDEV","Fragment","_Fragment","initialState","quizQuestion","status","error","index","selectedAnswer","points","showNext","reducer","state","action","type","payload","isCorrect","correctAnswer","App","_s","dispatch","TotalQuestion","length","fetch","then","res","json","data","catch","err","message","handleStartQuiz","handleNextQuestion","children","fileName","_jsxFileName","lineNumber","columnNumber","onStartQuiz","question","onNext","_c","$RefreshReg$"],"sources":["D:/React Projects/reactquiz/src/App.js"],"sourcesContent":["import './App.css';\nimport { useEffect, useReducer } from \"react\";\nimport Header from './components/Header';\nimport Loading from './components/Loading';\nimport Error from './components/Error';\nimport QuizMain from './components/QuizMain';\nimport EndQuiz from './components/EndQuiz';\nimport Question from './components/Question';\nimport NextButton from './components/NextButton';\n\nconst initialState = {\n  quizQuestion: [],\n  status: 'loading',\n  error: null,\n  index: 0, // track the current question\n  selectedAnswer: null, // to track the selected answer\n  points: 0, // track the score\n  showNext: false, // controls when to show the Next button\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'fetch_success':\n      return {\n        ...state,\n        quizQuestion: action.payload,\n        status: 'ready',\n      };\n    case 'fetch_error':\n      return {\n        ...state,\n        status: 'error',\n        error: action.payload,\n      };\n    case 'start_quiz':\n      return {\n        ...state,\n        status: 'active',\n      };\n    case 'next_question':\n      return {\n        ...state,\n        index: state.index + 1,\n        selectedAnswer: null, // reset selected answer for next question\n        showNext: false, // hide the Next button for the next question\n      };\n    case 'select_answer':\n      const isCorrect = action.payload === state.quizQuestion[state.index].correctAnswer;\n      return {\n        ...state,\n        selectedAnswer: action.payload,\n        points: isCorrect ? state.points + state.quizQuestion[state.index].points : state.points,\n        showNext: true, // display the Next button after selecting an answer\n      };\n    case 'finish_quiz':\n      return {\n        ...state,\n        status: 'finished',\n      };\n    default:\n      return state;\n  }\n}\n\n\nexport default function App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const { quizQuestion, status, index } = state;\n\n  const TotalQuestion = quizQuestion.length;\n\n  useEffect(() => {\n    fetch('http://localhost:8000/quizQuestion')\n      .then((res) => res.json())\n      .then((data) => {\n        dispatch({ type: 'fetch_success', payload: data });\n      })\n      .catch((err) => {\n        dispatch({ type: 'fetch_error', payload: err.message });\n      });\n  }, []);\n\n  // Function to handle starting the quiz\n  const handleStartQuiz = () => {\n    dispatch({ type: 'start_quiz' }); // Dispatch action to start quiz\n  };\n\n  // Function to go to the next question\n  const handleNextQuestion = () => {\n    if (index < TotalQuestion - 1) {\n      dispatch({ type: 'next_question' });\n    } else {\n      dispatch({ type: 'finish_quiz' });\n    }\n  };\n\n  // Render based on different states\n  return (\n    <>\n      {status === 'loading' && <Loading />}\n      {status === 'error' && <Error message={state.error} />}\n      {status === 'ready' && <Header TotalQuestion={TotalQuestion} onStartQuiz={handleStartQuiz} />}\n      {status === 'active' && (\n        <>\n          <QuizMain quizQuestion={state.quizQuestion} />\n          <Question question={quizQuestion[index]} />\n          <NextButton onNext={handleNextQuestion} />\n        </>\n      )}\n      {status === 'finished' && <EndQuiz />}\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}