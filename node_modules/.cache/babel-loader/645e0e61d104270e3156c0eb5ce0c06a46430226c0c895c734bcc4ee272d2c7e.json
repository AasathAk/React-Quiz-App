{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Projects\\\\reactquiz\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useEffect, useReducer } from \"react\";\nimport Header from './components/Header';\nimport Loading from './components/Loading';\nimport Error from './components/Error';\nimport QuizMain from './components/QuizMain';\nimport EndQuiz from './components/EndQuiz';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  quizQuestion: [],\n  status: 'loading',\n  // default to loading initially\n  error: null // for error handling\n};\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'fetch_success':\n      return {\n        ...state,\n        quizQuestion: action.payload,\n        status: 'ready' // set the status to ready once data is fetched\n      };\n    case 'fetch_error':\n      return {\n        ...state,\n        status: 'error',\n        // set the status to error\n        error: action.payload // handle error message\n      };\n    case 'start_quiz':\n      return {\n        ...state,\n        status: 'active' // start quiz\n      };\n    case 'finish_quiz':\n      return {\n        ...state,\n        status: 'finished' // finish quiz\n      };\n    default:\n      return state;\n    // default case to return the current state\n  }\n}\nexport default function App() {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const {\n    quizQuestion,\n    status\n  } = state;\n  const TotalQuestion = quizQuestion.length;\n  console.log();\n  useEffect(() => {\n    fetch('http://localhost:8000/quizQuestion').then(res => res.json()).then(data => {\n      dispatch({\n        type: 'fetch_success',\n        payload: data\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'fetch_error',\n        payload: err.message\n      });\n    });\n  }, []);\n\n  // Render based on different states\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [status === 'loading' && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 32\n    }, this), status === 'error' && /*#__PURE__*/_jsxDEV(Error, {\n      message: state.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 30\n    }, this), status === 'ready' && /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 30\n    }, this), status === 'active' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(QuizMain, {\n        quizQuestion: state.quizQuestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)\n    }, void 0, false), state.status === 'finished' && /*#__PURE__*/_jsxDEV(EndQuiz, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 39\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useReducer","Header","Loading","Error","QuizMain","EndQuiz","jsxDEV","_jsxDEV","Fragment","_Fragment","initialState","quizQuestion","status","error","reducer","state","action","type","payload","App","_s","dispatch","TotalQuestion","length","console","log","fetch","then","res","json","data","catch","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/React Projects/reactquiz/src/App.js"],"sourcesContent":["import './App.css';\nimport { useEffect, useReducer } from \"react\";\nimport Header from './components/Header';\nimport Loading from './components/Loading';\nimport Error from './components/Error';\nimport QuizMain from './components/QuizMain';\nimport EndQuiz from './components/EndQuiz';\n\nconst initialState = {\n  quizQuestion: [],\n  status: 'loading', // default to loading initially\n  error: null // for error handling\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'fetch_success':\n      return {\n        ...state,\n        quizQuestion: action.payload,\n        status: 'ready' // set the status to ready once data is fetched\n      };\n    case 'fetch_error':\n      return {\n        ...state,\n        status: 'error', // set the status to error\n        error: action.payload // handle error message\n      };\n    case 'start_quiz':\n      return {\n        ...state,\n        status: 'active' // start quiz\n      };\n    case 'finish_quiz':\n      return {\n        ...state,\n        status: 'finished' // finish quiz\n      };\n    default:\n      return state; // default case to return the current state\n  }\n}\n\nexport default function App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const {quizQuestion,status}=state;\n\n  const TotalQuestion = quizQuestion.length;\n  console.log()\n\n  useEffect(() => {\n    fetch('http://localhost:8000/quizQuestion')\n      .then((res) => res.json())\n      .then((data) => {\n        dispatch({ type: 'fetch_success', payload: data });\n      })\n      .catch((err) => {\n        dispatch({ type: 'fetch_error', payload: err.message });\n      });\n  }, []);\n\n  // Render based on different states\n  return (\n    <>\n      {status === 'loading' && <Loading />}\n      {status === 'error' && <Error message={state.error} />}\n      {status === 'ready' && <Header />}\n      {status === 'active' && (\n        <>\n          <QuizMain quizQuestion={state.quizQuestion} />\n          {/* Add more components like <Question /> and <NextButton /> as needed */}\n        </>\n      )}\n      {state.status === 'finished' && <EndQuiz />}\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC7C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,OAAO,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE3C,MAAMC,YAAY,GAAG;EACnBC,YAAY,EAAE,EAAE;EAChBC,MAAM,EAAE,SAAS;EAAE;EACnBC,KAAK,EAAE,IAAI,CAAC;AACd,CAAC;AAED,SAASC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;EAC9B,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,eAAe;MAClB,OAAO;QACL,GAAGF,KAAK;QACRJ,YAAY,EAAEK,MAAM,CAACE,OAAO;QAC5BN,MAAM,EAAE,OAAO,CAAC;MAClB,CAAC;IACH,KAAK,aAAa;MAChB,OAAO;QACL,GAAGG,KAAK;QACRH,MAAM,EAAE,OAAO;QAAE;QACjBC,KAAK,EAAEG,MAAM,CAACE,OAAO,CAAC;MACxB,CAAC;IACH,KAAK,YAAY;MACf,OAAO;QACL,GAAGH,KAAK;QACRH,MAAM,EAAE,QAAQ,CAAC;MACnB,CAAC;IACH,KAAK,aAAa;MAChB,OAAO;QACL,GAAGG,KAAK;QACRH,MAAM,EAAE,UAAU,CAAC;MACrB,CAAC;IACH;MACE,OAAOG,KAAK;IAAE;EAClB;AACF;AAEA,eAAe,SAASI,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACL,KAAK,EAAEM,QAAQ,CAAC,GAAGrB,UAAU,CAACc,OAAO,EAAEJ,YAAY,CAAC;EAE3D,MAAM;IAACC,YAAY;IAACC;EAAM,CAAC,GAACG,KAAK;EAEjC,MAAMO,aAAa,GAAGX,YAAY,CAACY,MAAM;EACzCC,OAAO,CAACC,GAAG,CAAC,CAAC;EAEb1B,SAAS,CAAC,MAAM;IACd2B,KAAK,CAAC,oCAAoC,CAAC,CACxCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACdT,QAAQ,CAAC;QAAEJ,IAAI,EAAE,eAAe;QAAEC,OAAO,EAAEY;MAAK,CAAC,CAAC;IACpD,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;MACdX,QAAQ,CAAC;QAAEJ,IAAI,EAAE,aAAa;QAAEC,OAAO,EAAEc,GAAG,CAACC;MAAQ,CAAC,CAAC;IACzD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,oBACE1B,OAAA,CAAAE,SAAA;IAAAyB,QAAA,GACGtB,MAAM,KAAK,SAAS,iBAAIL,OAAA,CAACL,OAAO;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACnC1B,MAAM,KAAK,OAAO,iBAAIL,OAAA,CAACJ,KAAK;MAAC8B,OAAO,EAAElB,KAAK,CAACF;IAAM;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACrD1B,MAAM,KAAK,OAAO,iBAAIL,OAAA,CAACN,MAAM;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAChC1B,MAAM,KAAK,QAAQ,iBAClBL,OAAA,CAAAE,SAAA;MAAAyB,QAAA,eACE3B,OAAA,CAACH,QAAQ;QAACO,YAAY,EAAEI,KAAK,CAACJ;MAAa;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,gBAE9C,CACH,EACAvB,KAAK,CAACH,MAAM,KAAK,UAAU,iBAAIL,OAAA,CAACF,OAAO;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAC3C,CAAC;AAEP;AAAClB,EAAA,CAlCuBD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}